apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  generation: 2
  labels:
    run: provider
  name: provider
  namespace: ${SPRING_PROFILE}

spec:
  replicas: 1
  selector:
    matchLabels:
      run: provider
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: provider
    spec:

      volumes:
        - name: service-account-creds
          secret:
            secretName: service-account-creds

      containers:
        - name: esp
          image: gcr.io/endpoints-release/endpoints-runtime:1
          args: [
            "--http_port", "8081",
            "--backend", "127.0.0.1:8080",
            "--service", "echo-api.endpoints.nahknarmi-190508.cloud.goog",
            "--version", "2018-01-05r0",
            "--service_account_key", "/etc/nginx/creds/service-account-creds.json",
          ]
          ports:
          - containerPort: 8081
            protocol: TCP
          volumeMounts:
            - mountPath: /etc/nginx/creds
              name: service-account-creds
              readOnly: true


        - name: provider
          image: asia.gcr.io/nahknarmi-190508/com.metlife.provider:${GIT_HASH}
          imagePullPolicy: Always
          ports:
          - containerPort: 8080
            protocol: TCP


          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 15
            timeoutSeconds: 1

          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 0
            timeoutSeconds: 1

          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: SPRING_PROFILES_ACTIVE
              value: ${SPRING_PROFILE}

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
