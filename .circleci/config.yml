version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - attach_workspace:
          at: ~/repo

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Run Unit Tests
          command: gradle unitTests

      - run:
          name: Build
          command: gradle assemble

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit

      - store_artifacts:
          path: ~/repo/build/libs/com.metlife.provider-1.0.0.jar

      - persist_to_workspace:
          root: .
          paths: .

  integration_tests:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Run Integration Tests
          command: gradle integrationTests

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit

  contract_tests:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      - run:
          name: Run Contract Tests
          command: gradle contractTests

      - run:
          name: Save test results
          command: |
            mkdir -p ~/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/junit/ \;
          when: always

      - store_test_results:
          path: ~/junit

      - store_artifacts:
          path: ~/junit

  publish_docker:
    docker:
      # specify the version you desire here
      - image: google/cloud-sdk

    working_directory: ~/repo

    environment:
      TERM: dumb

    steps:
      - checkout

      - attach_workspace:
          at: ~/repo

      - setup_remote_docker:
          docker_layer_caching: true

      - run: docker build -t asia.gcr.io/nahknarmi-190508/com.metlife.provider:$CIRCLE_SHA1 .

      - run: echo ${GOOGLE_AUTH} > ${HOME}/gcp-key.json
      - run: shasum ${HOME}/gcp-key.json

      - run: gcloud auth activate-service-account --key-file ${HOME}/gcp-key.json
      - run: gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
      - run: gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      - run: gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}

      - run: gcloud docker -- push asia.gcr.io/nahknarmi-190508/com.metlife.provider:$CIRCLE_SHA1
#ONE OFF
#      - run: kubectl run provider --image=asia.gcr.io/nahknarmi-190508/com.metlife.provider:$CIRCLE_SHA1 --port 8080

      - run: kubectl set image deployment/provider provider=asia.gcr.io/nahknarmi-190508/com.metlife.provider:$CIRCLE_SHA1

#ONE OFF
#      - run: kubectl expose deployment provider --type=LoadBalancer --port 80 --target-port 8080

workflows:
  version: 2
  build_and_test:
    jobs:
      - build

      - publish_docker:
          requires:
            - build

      - integration_tests:
          requires:
            - publish_docker

      - contract_tests:
          requires:
            - publish_docker